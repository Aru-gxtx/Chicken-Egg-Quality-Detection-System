from fastapi import FastAPI, UploadFile, Form
from fastapi.staticfiles import StaticFiles
from pymongo import MongoClient
from datetime import datetime
import shutil

app = FastAPI()

# Connect MongoDB
client = MongoClient("mongodb://localhost:27017/")
db = client["egg_database"]
collection = db["eggs"]

# Mount images directory so Flutter can access
app.mount("/images", StaticFiles(directory="images"), name="images")

@app.post("/egg")
async def upload_egg(image: UploadFile, size: str = Form(...), grade: str = Form(...)):
    # Save image file
    filepath = f"images/{image.filename}"
    with open(filepath, "wb") as buffer:
        shutil.copyfileobj(image.file, buffer)
    
    # Save record to DB
    record = {
        "image": image.filename,
        "size": size,
        "grade": grade,
        "timestamp": datetime.now().isoformat()
    }
    collection.insert_one(record)
    return {"message": "Egg data saved!"}

@app.get("/eggs")
def get_eggs():
    # Return eggs sorted by newest first
    eggs = list(collection.find({}, {"_id": 0}).sort("timestamp", -1))
    return {"eggs": eggs}
// eggs = list(collection.find({}, {"_id": 0}))
sudo systemctl status mongod
sudo apt update
sudo apt install -y mongodb




from fastapi import FastAPI
from fastapi.responses import FileResponse, JSONResponse
from fastapi.staticfiles import StaticFiles
import os, json

app = FastAPI()

# Folder that contains your egg data
EGG_FOLDER = "/home/group4PI/Documents/eggs"
JSON_FILE = os.path.join(EGG_FOLDER, "img_results.json")

# Serve images from this folder
app.mount("/images", StaticFiles(directory=EGG_FOLDER), name="images")

@app.get("/eggs")
def get_eggs():
    if not os.path.exists(JSON_FILE):
        return {"eggs": []}

    with open(JSON_FILE, "r") as f:
        data = json.load(f)

    # Modify each image path to a URL that Flutter can access
    for egg in data:
        image_filename = os.path.basename(egg["image_path"])
        egg["image_url"] = f"http://10.232.51.78:8000/images/{image_filename}"

    return {"eggs": data}

