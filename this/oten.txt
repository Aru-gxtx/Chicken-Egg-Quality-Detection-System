from fastapi import FastAPI, UploadFile, Form
from fastapi.staticfiles import StaticFiles
from pymongo import MongoClient
from datetime import datetime
import shutil

app = FastAPI()

# Connect MongoDB
client = MongoClient("mongodb://localhost:27017/")
db = client["egg_database"]
collection = db["eggs"]

# Mount images directory so Flutter can access
app.mount("/images", StaticFiles(directory="images"), name="images")

@app.post("/egg")
async def upload_egg(image: UploadFile, size: str = Form(...), grade: str = Form(...)):
    # Save image file
    filepath = f"images/{image.filename}"
    with open(filepath, "wb") as buffer:
        shutil.copyfileobj(image.file, buffer)
    
    # Save record to DB
    record = {
        "image": image.filename,
        "size": size,
        "grade": grade,
        "timestamp": datetime.now().isoformat()
    }
    collection.insert_one(record)
    return {"message": "Egg data saved!"}

@app.get("/eggs")
def get_eggs():
    # Return eggs sorted by newest first
    eggs = list(collection.find({}, {"_id": 0}).sort("timestamp", -1))
    return {"eggs": eggs}
// eggs = list(collection.find({}, {"_id": 0}))
sudo systemctl status mongod
sudo apt update
sudo apt install -y mongodb





from fastapi import FastAPI
from fastapi.responses import FileResponse
from fastapi.staticfiles import StaticFiles
from pathlib import Path
import json
import os

app = FastAPI()

# Path to your egg folder
EGG_FOLDER = Path("/home/pi/Documents/eggs")

# Serve static images (so Flutter can load them)
app.mount("/images", StaticFiles(directory=EGG_FOLDER), name="images")

@app.get("/eggs")
def get_eggs():
    json_path = EGG_FOLDER / "img_results.json"
    if not json_path.exists():
        return {"message": "No results file found"}

    with open(json_path, "r") as f:
        data = json.load(f)
    
    # If your JSON has relative filenames, add image URLs for Flutter
    for egg in data:
        if "image" in egg:
            egg["image_url"] = f"http://<RASPI_IP>:8000/images/{egg['image']}"
    
    return {"eggs": data}

