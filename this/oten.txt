from fastapi import FastAPI
from fastapi.staticfiles import StaticFiles
from fastapi.middleware.cors import CORSMiddleware
import json
import os

app = FastAPI()

# Allow Flutter and other clients to connect
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # allow all devices
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# Path to the folder where JSON and images are stored
EGG_FOLDER = "/home/group4PI/Documents/eggs"

@app.get("/eggs")
def get_eggs():
    """
    Read all JSON files in the egg folder and return them as a list.
    """
    eggs_data = []

    # Loop through all .json files in the folder
    for filename in os.listdir(EGG_FOLDER):
        if filename.endswith(".json"):
            file_path = os.path.join(EGG_FOLDER, filename)
            try:
                with open(file_path, "r") as f:
                    data = json.load(f)
                    eggs_data.append(data)
            except Exception as e:
                print(f"❌ Error reading {filename}: {e}")

    return {"eggs": eggs_data}

# Serve egg images
app.mount("/images", StaticFiles(directory=EGG_FOLDER), name="images")

@app.get("/")
def root():
    return {"message": "✅ Egg API is running! Visit /eggs to view data."}

(venv) group4PI@group4PI:~/Documents/test $ uvicorn main:app --host 0.0.0.0 --port 8000
INFO:     Started server process [12409]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
INFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)
INFO:     10.227.128.97:60311 - "GET /eggs HTTP/1.1" 200 OK
INFO:     10.227.128.97:60311 - "GET /eggs HTTP/1.1" 200 OK
INFO:     10.227.128.97:60311 - "GET /eggs HTTP/1.1" 200 OK
INFO:     10.227.128.97:60311 - "GET /eggs HTTP/1.1" 200 OK
INFO:     10.227.128.97:60311 - "GET /eggs HTTP/1.1" 200 OK
INFO:     10.227.128.97:60311 - "GET /eggs HTTP/1.1" 200 OK
INFO:     10.227.128.97:60329 - "GET /eggs HTTP/1.1" 200 OK
INFO:     10.227.128.97:60329 - "GET /eggs HTTP/1.1" 200 OK
INFO:     10.227.128.97:60329 - "GET /eggs HTTP/1.1" 200 OK
INFO:     10.227.128.97:60329 - "GET /eggs HTTP/1.1" 200 OK
INFO:     10.227.128.97:60345 - "GET /eggs HTTP/1.1" 200 OK
INFO:     10.227.128.97:60405 - "GET /eggs HTTP/1.1" 200 OK
INFO:     10.227.128.97:60405 - "GET /eggs HTTP/1.1" 200 OK
INFO:     10.227.128.97:60405 - "GET /eggs HTTP/1.1" 200 OK
INFO:     10.227.128.97:60405 - "GET /eggs HTTP/1.1" 200 OK
INFO:     10.227.128.97:60405 - "GET /eggs HTTP/1.1" 200 OK
INFO:     10.227.128.97:60426 - "GET /eggs HTTP/1.1" 200 OK



from fastapi import FastAPI
from fastapi.staticfiles import StaticFiles
from fastapi.middleware.cors import CORSMiddleware
import json
import os

app = FastAPI()

# Allow Flutter and other clients to connect
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # allow all devices
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# Path to the folder where JSON and images are stored
EGG_FOLDER = "/home/group4PI/Documents/eggs"
JSON_FILE = os.path.join(EGG_FOLDER, "img_results.json")

@app.get("/eggs")
def get_eggs():
    """
    Read the img_results.json file and return its content.
    """
    if not os.path.exists(JSON_FILE):
        return {"eggs": []}

    with open(JSON_FILE, "r") as f:
        data = json.load(f)

    # Ensure the response always has the structure {"eggs": [...]}
    if isinstance(data, list):
        return {"eggs": data}
    elif isinstance(data, dict) and "eggs" in data:
        return data
    else:
        return {"eggs": [data]}

# Serve egg images
app.mount("/images", StaticFiles(directory=EGG_FOLDER), name="images")

@app.get("/")
def root():
    return {"message": "Egg API is running! Visit /eggs to view data."}


